# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '61a4c511-42db-47be-9fce-94cc08b3ca36'
  imageRepository: 'fastermiketest'
  containerRegistry: 'fastermikeazure.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'fastermikeazure54068d4d-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'FasterMiketestdelete-1589.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: az login -u 'fast3r.mike@gmail.com' -p 'L3tsr0ck!!'
            displayName: 'Login into Azure'


          - bash: az aks get-credentials --resource-group AARGMiha1 --name AAAKMiha1
            displayName: 'Login into AKS cluster'

          - bash: kubectl set image deployment/fastermiketest fastermiketest=fastermiketest:$(tag)-latest --record
            displayName: 'Deploy new docker-image'































#          - task: KubernetesManifest@0
#            displayName: Create imagePullSecret
#            inputs:
#              action: createSecret
#              secretName: $(imagePullSecret)
#              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
#          - task: KubernetesManifest@0
#            displayName: Deploy to Kubernetes cluster
#            inputs:
#              action: deploy
#              manifests: |
#                $(Pipeline.Workspace)/manifests/deployment.yml
#                $(Pipeline.Workspace)/manifests/service.yml
#              imagePullSecrets: |
#                $(imagePullSecret)
#              containers: |
#                $(containerRegistry)/$(imageRepository):$(tag)

